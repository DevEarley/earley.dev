//render article search
class EarleyDevArticles extends React.Component{
	searchInput;
	articlesElement;

	state={
		articles:[],
		filteredArticles:[]
	};

	constructor(){
		super();
		console.log("EarleyDevArticles | constructor");
		const xhr = new XMLHttpRequest();
		xhr.open('GET', '../articles.json', true);
		xhr.onload = (e)=>{
				console.log(this.responseText);
				let _articles = JSON.parse(xhr.responseText);
				this.setState({
					articles:_articles,
					filteredArticles:_articles
				});
		};
		xhr.send();
	}

	componentDidMount(){
		console.log("EarleyDevArticles | componentDidMount");
		this.searchInput = document.getElementById("search-input");
		this.articlesElement = document.getElementById("articles");
		this.searchInput.onkeyup = this.onSearch();
		this.searchInput.onblur = this.onSearch();
	}

	onSearch() {
		let searchValue = this.searchInput.value;
		console.log("EarleyDevArticles | componentDidMount | "+ searchValue);
	}

	buildRow(article){
		console.log("build Row");
		return (<tr>
			<td><img src={"images/source-"+article.source +".png"}/></td>
			<td><a href={article.link}>{article.name}</a></td>
			</tr>);
	}

	render(){
		return( <div id="articles-container" key="articles-container">
				<h1>Articles</h1>
					<label id="search-input-label" htmlFor="search-input">Search Articles</label>
					<input id="search-input" placeholder="Search Articles" type="text" />
					<table>
					{this.state.articles.map((article) => (
       					<tbody key={article.name}>{this.buildRow(article)}</tbody>
      				))}
					</table>
			</div>);
	}

}
ReactDOM.render(<EarleyDevArticles />, document.getElementById("articles"));