class EarleyDevBubbles {
    bubbles;
    bubbleCount = 1000;
    topBubbleBound = 1200;
    bottomBubbleBound = -2200;
    bubbleGeometry = new THREE.Geometry();
    bubbleMaterial = new THREE.ParticleBasicMaterial({
        color: 0xFFFFFF,
        size: 20,
        map: THREE.ImageUtils.loadTexture(
            "bubble.png"
        ), depthTest: false,
        blending: THREE.AdditiveBlending,
        transparent: true
    });
    setupBubbles() {
        for (var p = 0; p < this.bubbleCount; p++) {

            var pX = Math.random() * 10000 - 5000,
                pY = (Math.random() * (this.topBubbleBound - this.bottomBubbleBound)) + this.bottomBubbleBound,
                pZ = (Math.random() * 10000 - 5000) - 5000,
                particle = new THREE.Vector3(pX, pY, pZ);
            particle.startY = pY;
            particle.velocity = new THREE.Vector3(
                0,              // x
                -Math.random(), // y: random vel
                0);

            // add it to the geometry
            this.bubbleGeometry.vertices.push(particle);
        }

        // create the particle system
        this.bubbles = new THREE.Points(
            this.bubbleGeometry,
            this.bubbleMaterial)
        this.bubbles.sortParticles = true;
        // add it to the scene
        return this.bubbles;
        // this.scene.add(this.bubbles);
    }

    updateBubbles() {
        //this.particleSystem.rotation.y += 0.01;
        for (var i = 0; i < this.bubbleGeometry.vertices.length; i++) {
            var particle = this.bubbleGeometry.vertices[i];
            if (particle.y > this.topBubbleBound) {
                particle.y = this.bottomBubbleBound;
            }
            particle.velocity.x += (Math.random() - 0.5) * 0.02;
            particle.x += particle.velocity.x;
            particle.y += 1;
        }
        this.bubbleGeometry.verticesNeedUpdate = true;
    }
}